import esphome.codegen as cg

ha_standard_devices = cg.esphome_ns.enum("esp_zb_ha_standard_devices_t")
DEVICE_ID = {
    "ON_OFF_SWITCH": ha_standard_devices.ESP_ZB_HA_ON_OFF_SWITCH_DEVICE_ID,
    0x0000: ha_standard_devices.ESP_ZB_HA_ON_OFF_SWITCH_DEVICE_ID,
    "LEVEL_CONTROL_SWITCH": ha_standard_devices.ESP_ZB_HA_LEVEL_CONTROL_SWITCH_DEVICE_ID,
    0x0001: ha_standard_devices.ESP_ZB_HA_LEVEL_CONTROL_SWITCH_DEVICE_ID,
    "ON_OFF_OUTPUT": ha_standard_devices.ESP_ZB_HA_ON_OFF_OUTPUT_DEVICE_ID,
    0x0002: ha_standard_devices.ESP_ZB_HA_ON_OFF_OUTPUT_DEVICE_ID,
    "LEVEL_CONTROLLABLE_OUTPUT": ha_standard_devices.ESP_ZB_HA_LEVEL_CONTROLLABLE_OUTPUT_DEVICE_ID,
    0x0003: ha_standard_devices.ESP_ZB_HA_LEVEL_CONTROLLABLE_OUTPUT_DEVICE_ID,
    "SCENE_SELECTOR": ha_standard_devices.ESP_ZB_HA_SCENE_SELECTOR_DEVICE_ID,
    0x0004: ha_standard_devices.ESP_ZB_HA_SCENE_SELECTOR_DEVICE_ID,
    "CONFIGURATION_TOOL": ha_standard_devices.ESP_ZB_HA_CONFIGURATION_TOOL_DEVICE_ID,
    0x0005: ha_standard_devices.ESP_ZB_HA_CONFIGURATION_TOOL_DEVICE_ID,
    "REMOTE_CONTROL": ha_standard_devices.ESP_ZB_HA_REMOTE_CONTROL_DEVICE_ID,
    0x0006: ha_standard_devices.ESP_ZB_HA_REMOTE_CONTROL_DEVICE_ID,
    "COMBINED_INTERFACE": ha_standard_devices.ESP_ZB_HA_COMBINED_INTERFACE_DEVICE_ID,
    0x0007: ha_standard_devices.ESP_ZB_HA_COMBINED_INTERFACE_DEVICE_ID,
    "RANGE_EXTENDER": ha_standard_devices.ESP_ZB_HA_RANGE_EXTENDER_DEVICE_ID,
    0x0008: ha_standard_devices.ESP_ZB_HA_RANGE_EXTENDER_DEVICE_ID,
    "MAINS_POWER_OUTLET": ha_standard_devices.ESP_ZB_HA_MAINS_POWER_OUTLET_DEVICE_ID,
    0x0009: ha_standard_devices.ESP_ZB_HA_MAINS_POWER_OUTLET_DEVICE_ID,
    "DOOR_LOCK": ha_standard_devices.ESP_ZB_HA_DOOR_LOCK_DEVICE_ID,
    0x000A: ha_standard_devices.ESP_ZB_HA_DOOR_LOCK_DEVICE_ID,
    "DOOR_LOCK_CONTROLLER": ha_standard_devices.ESP_ZB_HA_DOOR_LOCK_CONTROLLER_DEVICE_ID,
    0x000B: ha_standard_devices.ESP_ZB_HA_DOOR_LOCK_CONTROLLER_DEVICE_ID,
    "SIMPLE_SENSOR": ha_standard_devices.ESP_ZB_HA_SIMPLE_SENSOR_DEVICE_ID,
    0x000C: ha_standard_devices.ESP_ZB_HA_SIMPLE_SENSOR_DEVICE_ID,
    "CONSUMPTION_AWARENESS": ha_standard_devices.ESP_ZB_HA_CONSUMPTION_AWARENESS_DEVICE_ID,
    0x000D: ha_standard_devices.ESP_ZB_HA_CONSUMPTION_AWARENESS_DEVICE_ID,
    "HOME_GATEWAY": ha_standard_devices.ESP_ZB_HA_HOME_GATEWAY_DEVICE_ID,
    0x0050: ha_standard_devices.ESP_ZB_HA_HOME_GATEWAY_DEVICE_ID,
    "SMART_PLUG": ha_standard_devices.ESP_ZB_HA_SMART_PLUG_DEVICE_ID,
    0x0051: ha_standard_devices.ESP_ZB_HA_SMART_PLUG_DEVICE_ID,
    "WHITE_GOODS": ha_standard_devices.ESP_ZB_HA_WHITE_GOODS_DEVICE_ID,
    0x0052: ha_standard_devices.ESP_ZB_HA_WHITE_GOODS_DEVICE_ID,
    "METER_INTERFACE": ha_standard_devices.ESP_ZB_HA_METER_INTERFACE_DEVICE_ID,
    0x0053: ha_standard_devices.ESP_ZB_HA_METER_INTERFACE_DEVICE_ID,
    "ON_OFF_LIGHT": ha_standard_devices.ESP_ZB_HA_ON_OFF_LIGHT_DEVICE_ID,
    0x0100: ha_standard_devices.ESP_ZB_HA_ON_OFF_LIGHT_DEVICE_ID,
    "DIMMABLE_LIGHT": ha_standard_devices.ESP_ZB_HA_DIMMABLE_LIGHT_DEVICE_ID,
    0x0101: ha_standard_devices.ESP_ZB_HA_DIMMABLE_LIGHT_DEVICE_ID,
    "COLOR_DIMMABLE_LIGHT": ha_standard_devices.ESP_ZB_HA_COLOR_DIMMABLE_LIGHT_DEVICE_ID,
    0x0102: ha_standard_devices.ESP_ZB_HA_COLOR_DIMMABLE_LIGHT_DEVICE_ID,
    "DIMMER_SWITCH": ha_standard_devices.ESP_ZB_HA_DIMMER_SWITCH_DEVICE_ID,
    0x0104: ha_standard_devices.ESP_ZB_HA_DIMMER_SWITCH_DEVICE_ID,
    "COLOR_DIMMER_SWITCH": ha_standard_devices.ESP_ZB_HA_COLOR_DIMMER_SWITCH_DEVICE_ID,
    0x0105: ha_standard_devices.ESP_ZB_HA_COLOR_DIMMER_SWITCH_DEVICE_ID,
    "LIGHT_SENSOR": ha_standard_devices.ESP_ZB_HA_LIGHT_SENSOR_DEVICE_ID,
    0x0106: ha_standard_devices.ESP_ZB_HA_LIGHT_SENSOR_DEVICE_ID,
    "SHADE": ha_standard_devices.ESP_ZB_HA_SHADE_DEVICE_ID,
    0x0200: ha_standard_devices.ESP_ZB_HA_SHADE_DEVICE_ID,
    "SHADE_CONTROLLER": ha_standard_devices.ESP_ZB_HA_SHADE_CONTROLLER_DEVICE_ID,
    0x0201: ha_standard_devices.ESP_ZB_HA_SHADE_CONTROLLER_DEVICE_ID,
    "WINDOW_COVERING": ha_standard_devices.ESP_ZB_HA_WINDOW_COVERING_DEVICE_ID,
    0x0202: ha_standard_devices.ESP_ZB_HA_WINDOW_COVERING_DEVICE_ID,
    "WINDOW_COVERING_CONTROLLER": ha_standard_devices.ESP_ZB_HA_WINDOW_COVERING_CONTROLLER_DEVICE_ID,
    0x0203: ha_standard_devices.ESP_ZB_HA_WINDOW_COVERING_CONTROLLER_DEVICE_ID,
    "HEATING_COOLING_UNIT": ha_standard_devices.ESP_ZB_HA_HEATING_COOLING_UNIT_DEVICE_ID,
    0x0300: ha_standard_devices.ESP_ZB_HA_HEATING_COOLING_UNIT_DEVICE_ID,
    "THERMOSTAT": ha_standard_devices.ESP_ZB_HA_THERMOSTAT_DEVICE_ID,
    0x0301: ha_standard_devices.ESP_ZB_HA_THERMOSTAT_DEVICE_ID,
    "TEMPERATURE_SENSOR": ha_standard_devices.ESP_ZB_HA_TEMPERATURE_SENSOR_DEVICE_ID,
    0x0302: ha_standard_devices.ESP_ZB_HA_TEMPERATURE_SENSOR_DEVICE_ID,
    "IAS_CONTROL_INDICATING_EQUIPMENT_ID": ha_standard_devices.ESP_ZB_HA_IAS_CONTROL_INDICATING_EQUIPMENT_ID,
    0x0400: ha_standard_devices.ESP_ZB_HA_IAS_CONTROL_INDICATING_EQUIPMENT_ID,
    "IAS_ANCILLARY_CONTROL_EQUIPMENT_ID": ha_standard_devices.ESP_ZB_HA_IAS_ANCILLARY_CONTROL_EQUIPMENT_ID,
    0x0401: ha_standard_devices.ESP_ZB_HA_IAS_ANCILLARY_CONTROL_EQUIPMENT_ID,
    "IAS_ZONE_ID": ha_standard_devices.ESP_ZB_HA_IAS_ZONE_ID,
    0x0402: ha_standard_devices.ESP_ZB_HA_IAS_ZONE_ID,
    "IAS_WARNING": ha_standard_devices.ESP_ZB_HA_IAS_WARNING_DEVICE_ID,
    0x0403: ha_standard_devices.ESP_ZB_HA_IAS_WARNING_DEVICE_ID,
    "TEST": ha_standard_devices.ESP_ZB_HA_TEST_DEVICE_ID,
    0xFFF0: ha_standard_devices.ESP_ZB_HA_TEST_DEVICE_ID,
    "CUSTOM_TUNNEL": ha_standard_devices.ESP_ZB_HA_CUSTOM_TUNNEL_DEVICE_ID,
    0xFFF1: ha_standard_devices.ESP_ZB_HA_CUSTOM_TUNNEL_DEVICE_ID,
    "CUSTOM_ATTR": ha_standard_devices.ESP_ZB_HA_CUSTOM_ATTR_DEVICE_ID,
    0xFFF2: ha_standard_devices.ESP_ZB_HA_CUSTOM_ATTR_DEVICE_ID,
}
cluster_id = cg.esphome_ns.enum("esp_zb_zcl_cluster_id_t")
CLUSTER_ID = {
    "BASIC": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_BASIC,
    0x0000: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_BASIC,
    "POWER_CONFIG": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_POWER_CONFIG,
    0x0001: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_POWER_CONFIG,
    "DEVICE_TEMP_CONFIG": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_DEVICE_TEMP_CONFIG,
    0x0002: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_DEVICE_TEMP_CONFIG,
    "IDENTIFY": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_IDENTIFY,
    0x0003: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_IDENTIFY,
    "GROUPS": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_GROUPS,
    0x0004: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_GROUPS,
    "SCENES": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_SCENES,
    0x0005: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_SCENES,
    "ON_OFF": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_ON_OFF,
    0x0006: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_ON_OFF,
    "ON_OFF_SWITCH_CONFIG": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_ON_OFF_SWITCH_CONFIG,
    0x0007: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_ON_OFF_SWITCH_CONFIG,
    "LEVEL_CONTROL": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_LEVEL_CONTROL,
    0x0008: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_LEVEL_CONTROL,
    "ALARMS": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_ALARMS,
    0x0009: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_ALARMS,
    "TIME": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_TIME,
    0x000A: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_TIME,
    "RSSI_LOCATION": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_RSSI_LOCATION,
    0x000B: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_RSSI_LOCATION,
    "ANALOG_INPUT": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_ANALOG_INPUT,
    0x000C: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_ANALOG_INPUT,
    "ANALOG_OUTPUT": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_ANALOG_OUTPUT,
    0x000D: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_ANALOG_OUTPUT,
    "ANALOG_VALUE": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_ANALOG_VALUE,
    0x000E: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_ANALOG_VALUE,
    "BINARY_INPUT": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_BINARY_INPUT,
    0x000F: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_BINARY_INPUT,
    "BINARY_OUTPUT": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_BINARY_OUTPUT,
    0x0010: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_BINARY_OUTPUT,
    "BINARY_VALUE": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_BINARY_VALUE,
    0x0011: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_BINARY_VALUE,
    "MULTI_INPUT": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_MULTI_INPUT,
    0x0012: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_MULTI_INPUT,
    "MULTI_OUTPUT": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_MULTI_OUTPUT,
    0x0013: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_MULTI_OUTPUT,
    "MULTI_VALUE": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_MULTI_VALUE,
    0x0014: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_MULTI_VALUE,
    "COMMISSIONING": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_COMMISSIONING,
    0x0015: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_COMMISSIONING,
    "OTA_UPGRADE": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_OTA_UPGRADE,
    0x0019: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_OTA_UPGRADE,
    "POLL_CONTROL": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_POLL_CONTROL,
    0x0020: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_POLL_CONTROL,
    "GREEN_POWER": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_GREEN_POWER,
    0x0021: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_GREEN_POWER,
    "KEEP_ALIVE": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_KEEP_ALIVE,
    0x0025: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_KEEP_ALIVE,
    "SHADE_CONFIG": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_SHADE_CONFIG,
    0x0100: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_SHADE_CONFIG,
    "DOOR_LOCK": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_DOOR_LOCK,
    0x0101: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_DOOR_LOCK,
    "WINDOW_COVERING": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_WINDOW_COVERING,
    0x0102: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_WINDOW_COVERING,
    "PUMP_CONFIG_CONTROL": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_PUMP_CONFIG_CONTROL,
    0x0200: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_PUMP_CONFIG_CONTROL,
    "THERMOSTAT": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_THERMOSTAT,
    0x0201: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_THERMOSTAT,
    "FAN_CONTROL": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_FAN_CONTROL,
    0x0202: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_FAN_CONTROL,
    "DEHUMID_CONTROL": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_DEHUMID_CONTROL,
    0x0203: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_DEHUMID_CONTROL,
    "THERMOSTAT_UI_CONFIG": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_THERMOSTAT_UI_CONFIG,
    0x0204: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_THERMOSTAT_UI_CONFIG,
    "COLOR_CONTROL": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_COLOR_CONTROL,
    0x0300: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_COLOR_CONTROL,
    "BALLAST_CONFIG": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_BALLAST_CONFIG,
    0x0301: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_BALLAST_CONFIG,
    "ILLUMINANCE_MEASUREMENT": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_ILLUMINANCE_MEASUREMENT,
    0x0400: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_ILLUMINANCE_MEASUREMENT,
    "TEMP_MEASUREMENT": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_TEMP_MEASUREMENT,
    0x0402: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_TEMP_MEASUREMENT,
    "PRESSURE_MEASUREMENT": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_PRESSURE_MEASUREMENT,
    0x0403: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_PRESSURE_MEASUREMENT,
    "FLOW_MEASUREMENT": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_FLOW_MEASUREMENT,
    0x0404: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_FLOW_MEASUREMENT,
    "REL_HUMIDITY_MEASUREMENT": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_REL_HUMIDITY_MEASUREMENT,
    0x0405: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_REL_HUMIDITY_MEASUREMENT,
    "OCCUPANCY_SENSING": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_OCCUPANCY_SENSING,
    0x0406: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_OCCUPANCY_SENSING,
    "PH_MEASUREMENT": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_PH_MEASUREMENT,
    0x0409: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_PH_MEASUREMENT,
    "EC_MEASUREMENT": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_EC_MEASUREMENT,
    0x040A: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_EC_MEASUREMENT,
    "WIND_SPEED_MEASUREMENT": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_WIND_SPEED_MEASUREMENT,
    0x040B: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_WIND_SPEED_MEASUREMENT,
    "CARBON_DIOXIDE_MEASUREMENT": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_CARBON_DIOXIDE_MEASUREMENT,
    0x040D: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_CARBON_DIOXIDE_MEASUREMENT,
    "PM2_5_MEASUREMENT": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_PM2_5_MEASUREMENT,
    0x042A: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_PM2_5_MEASUREMENT,
    "IAS_ZONE": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_IAS_ZONE,
    0x0500: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_IAS_ZONE,
    "IAS_ACE": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_IAS_ACE,
    0x0501: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_IAS_ACE,
    "IAS_WD": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_IAS_WD,
    0x0502: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_IAS_WD,
    "PRICE": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_PRICE,
    0x0700: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_PRICE,
    "DRLC": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_DRLC,
    0x0701: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_DRLC,
    "METERING": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_METERING,
    0x0702: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_METERING,
    "METER_IDENTIFICATION": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_METER_IDENTIFICATION,
    0x0B01: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_METER_IDENTIFICATION,
    "ELECTRICAL_MEASUREMENT": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_ELECTRICAL_MEASUREMENT,
    0x0B04: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_ELECTRICAL_MEASUREMENT,
    "DIAGNOSTICS": cluster_id.ESP_ZB_ZCL_CLUSTER_ID_DIAGNOSTICS,
    0x0B05: cluster_id.ESP_ZB_ZCL_CLUSTER_ID_DIAGNOSTICS,
}
cluster_role = cg.esphome_ns.enum("esp_zb_zcl_cluster_role_t")
CLUSTER_ROLE = {
    "SERVER": cluster_role.ESP_ZB_ZCL_CLUSTER_SERVER_ROLE,
    "CLIENT": cluster_role.ESP_ZB_ZCL_CLUSTER_CLIENT_ROLE,
}
attr_type = cg.esphome_ns.enum("esp_zb_zcl_attr_type_t")
ATTR_TYPE = {
    "NULL": attr_type.ESP_ZB_ZCL_ATTR_TYPE_NULL,
    "8BIT": attr_type.ESP_ZB_ZCL_ATTR_TYPE_8BIT,
    "16BIT": attr_type.ESP_ZB_ZCL_ATTR_TYPE_16BIT,
    "24BIT": attr_type.ESP_ZB_ZCL_ATTR_TYPE_24BIT,
    "32BIT": attr_type.ESP_ZB_ZCL_ATTR_TYPE_32BIT,
    "40BIT": attr_type.ESP_ZB_ZCL_ATTR_TYPE_40BIT,
    "48BIT": attr_type.ESP_ZB_ZCL_ATTR_TYPE_48BIT,
    "56BIT": attr_type.ESP_ZB_ZCL_ATTR_TYPE_56BIT,
    "64BIT": attr_type.ESP_ZB_ZCL_ATTR_TYPE_64BIT,
    "BOOL": attr_type.ESP_ZB_ZCL_ATTR_TYPE_BOOL,
    "8BITMAP": attr_type.ESP_ZB_ZCL_ATTR_TYPE_8BITMAP,
    "16BITMAP": attr_type.ESP_ZB_ZCL_ATTR_TYPE_16BITMAP,
    "24BITMAP": attr_type.ESP_ZB_ZCL_ATTR_TYPE_24BITMAP,
    "32BITMAP": attr_type.ESP_ZB_ZCL_ATTR_TYPE_32BITMAP,
    "40BITMAP": attr_type.ESP_ZB_ZCL_ATTR_TYPE_40BITMAP,
    "48BITMAP": attr_type.ESP_ZB_ZCL_ATTR_TYPE_48BITMAP,
    "56BITMAP": attr_type.ESP_ZB_ZCL_ATTR_TYPE_56BITMAP,
    "64BITMAP": attr_type.ESP_ZB_ZCL_ATTR_TYPE_64BITMAP,
    "U8": attr_type.ESP_ZB_ZCL_ATTR_TYPE_U8,
    "U16": attr_type.ESP_ZB_ZCL_ATTR_TYPE_U16,
    "U24": attr_type.ESP_ZB_ZCL_ATTR_TYPE_U24,
    "U32": attr_type.ESP_ZB_ZCL_ATTR_TYPE_U32,
    "U40": attr_type.ESP_ZB_ZCL_ATTR_TYPE_U40,
    "U48": attr_type.ESP_ZB_ZCL_ATTR_TYPE_U48,
    "U56": attr_type.ESP_ZB_ZCL_ATTR_TYPE_U56,
    "U64": attr_type.ESP_ZB_ZCL_ATTR_TYPE_U64,
    "S8": attr_type.ESP_ZB_ZCL_ATTR_TYPE_S8,
    "S16": attr_type.ESP_ZB_ZCL_ATTR_TYPE_S16,
    "S24": attr_type.ESP_ZB_ZCL_ATTR_TYPE_S24,
    "S32": attr_type.ESP_ZB_ZCL_ATTR_TYPE_S32,
    "S40": attr_type.ESP_ZB_ZCL_ATTR_TYPE_S40,
    "S48": attr_type.ESP_ZB_ZCL_ATTR_TYPE_S48,
    "S56": attr_type.ESP_ZB_ZCL_ATTR_TYPE_S56,
    "S64": attr_type.ESP_ZB_ZCL_ATTR_TYPE_S64,
    "8BIT_ENUM": attr_type.ESP_ZB_ZCL_ATTR_TYPE_8BIT_ENUM,
    "16BIT_ENUM": attr_type.ESP_ZB_ZCL_ATTR_TYPE_16BIT_ENUM,
    "SEMI": attr_type.ESP_ZB_ZCL_ATTR_TYPE_SEMI,
    "SINGLE": attr_type.ESP_ZB_ZCL_ATTR_TYPE_SINGLE,
    "DOUBLE": attr_type.ESP_ZB_ZCL_ATTR_TYPE_DOUBLE,
    "OCTET_STRING": attr_type.ESP_ZB_ZCL_ATTR_TYPE_OCTET_STRING,
    "CHAR_STRING": attr_type.ESP_ZB_ZCL_ATTR_TYPE_CHAR_STRING,
    "LONG_OCTET_STRING": attr_type.ESP_ZB_ZCL_ATTR_TYPE_LONG_OCTET_STRING,
    "LONG_CHAR_STRING": attr_type.ESP_ZB_ZCL_ATTR_TYPE_LONG_CHAR_STRING,
    "ARRAY": attr_type.ESP_ZB_ZCL_ATTR_TYPE_ARRAY,
    "16BIT_ARRAY": attr_type.ESP_ZB_ZCL_ATTR_TYPE_16BIT_ARRAY,
    "32BIT_ARRAY": attr_type.ESP_ZB_ZCL_ATTR_TYPE_32BIT_ARRAY,
    "STRUCTURE": attr_type.ESP_ZB_ZCL_ATTR_TYPE_STRUCTURE,
    "SET": attr_type.ESP_ZB_ZCL_ATTR_TYPE_SET,
    "BAG": attr_type.ESP_ZB_ZCL_ATTR_TYPE_BAG,
    "TIME_OF_DAY": attr_type.ESP_ZB_ZCL_ATTR_TYPE_TIME_OF_DAY,
    "DATE": attr_type.ESP_ZB_ZCL_ATTR_TYPE_DATE,
    "UTC_TIME": attr_type.ESP_ZB_ZCL_ATTR_TYPE_UTC_TIME,
    "CLUSTER_ID": attr_type.ESP_ZB_ZCL_ATTR_TYPE_CLUSTER_ID,
    "ATTRIBUTE_ID": attr_type.ESP_ZB_ZCL_ATTR_TYPE_ATTRIBUTE_ID,
    "BACNET_OID": attr_type.ESP_ZB_ZCL_ATTR_TYPE_BACNET_OID,
    "IEEE_ADDR": attr_type.ESP_ZB_ZCL_ATTR_TYPE_IEEE_ADDR,
    "128_BIT_KEY": attr_type.ESP_ZB_ZCL_ATTR_TYPE_128_BIT_KEY,
    "INVALID": attr_type.ESP_ZB_ZCL_ATTR_TYPE_INVALID,
}
